var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,1.109,1,0.936]],["body/components/AppComponent.html",[0,1.766,1,1.403,2,0.525,3,0.432,4,1.964,5,1.964,6,1.964,7,0.349,8,1.54,9,1.831,10,3.358,11,1.964,12,3.358,13,3.07,14,1.8,15,2.852,16,2.852,17,2.852,18,2.852,19,0.525,20,1.287,21,4.083,22,1.528,23,3.686,24,1.052,25,1.54,26,1.515,27,1.8,28,2.852,29,1.052,30,0.066,31,1.515,32,0.762,33,0.886,34,1.54,35,1.964,36,1.052,37,1.54,38,1.287,39,1.261,40,1.261,41,1.831,42,1.278,43,0.913,44,1.54,45,0.432,46,0.747,47,1.54,48,1.964,49,1.964,50,1.964,51,2.852,52,1.261,53,2.852,54,2.852,55,2.852,56,3.686,57,1.964,58,1.964,59,0.038,60,0.038]],["title/modules/AppModule.html",[61,0.787,62,1.318]],["body/modules/AppModule.html",[1,1.717,2,0.489,3,0.403,7,0.325,30,0.067,42,1.735,43,0.585,45,0.596,46,0.696,52,1.174,59,0.036,60,0.036,61,0.866,62,2.443,63,0.98,64,2.069,65,2.527,66,2.982,67,1.434,68,1.434,69,1.434,70,1.434,71,1.434,72,1.796,73,2.134,74,2.134,75,2.123,76,1.434,77,1.174,78,1.829,79,2.707,80,1.434,81,1.174,82,2.123,83,1.829,84,0.98,85,1.829,86,1.829,87,1.738,88,1.829,89,2.707,90,1.434,91,2.707,92,2.707,93,1.434,94,1.829,95,2.707,96,1.829,97,1.434,98,1.829,99,1.829,100,2.707,101,2.707,102,2.707,103,2.123]],["title/modules/AppRoutingModule.html",[61,0.787,72,1.109]],["body/modules/AppRoutingModule.html",[1,1.077,2,0.756,3,0.623,7,0.503,30,0.067,42,1.696,43,0.906,45,0.623,46,1.077,59,0.049,60,0.049,61,0.906,64,1.816,72,1.654,82,2.875,87,1.816,97,2.219,104,2.829,105,2.829,106,2.829,107,1.516,108,1.816,109,2.829,110,1.816,111,2.829,112,2.829,113,2.829,114,2.829,115,2.829]],["title/injectables/AuthenticationService.html",[26,1.109,116,0.936]],["body/injectables/AuthenticationService.html",[2,0.446,3,0.368,7,0.297,14,0.895,19,0.446,20,1.141,22,1.355,24,0.895,26,1.141,27,2.063,29,0.895,30,0.067,31,0.753,32,0.977,33,0.753,36,1.636,37,1.983,38,1.536,39,1.96,40,1.96,42,1.392,43,0.535,45,0.368,46,0.636,47,1.31,59,0.034,60,0.034,84,0.895,110,1.624,116,1.162,117,1.31,118,3.053,119,3.053,120,3.053,121,3.405,122,3.405,123,1.67,124,2.529,125,2.869,126,2.529,127,1.67,128,1.67,129,1.67,130,2.529,131,2.529,132,1.67,133,2.529,134,1.67,135,3.053,136,1.96,137,2.529,138,0.753,139,1.31,140,1.67,141,1.31,142,1.072,143,1.072,144,1.072,145,1.072,146,1.072,147,1.67,148,1.67,149,1.67,150,1.67,151,1.31,152,1.67,153,1.67,154,1.67,155,1.67,156,1.67,157,1.67,158,1.67,159,1.67,160,1.67,161,1.67,162,1.67,163,1.67,164,1.67,165,1.67,166,1.67,167,1.67,168,1.31,169,1.31,170,1.31,171,1.67,172,1.67,173,1.67,174,1.67,175,1.67,176,1.67,177,1.31]],["title/interfaces/Login.html",[138,1.109,178,0.936]],["body/interfaces/Login.html",[2,0.78,3,0.643,7,0.519,19,0.78,20,1.687,30,0.064,32,1.163,38,2.078,45,0.643,59,0.05,60,0.05,138,1.687,178,1.423,179,2.288,180,4.128,181,4.128,182,4.128,183,4.128,184,2.933,185,2.918,186,2.918,187,2.918,188,2.918]],["title/interceptors/ResponseInterceptorService.html",[73,1.318,189,1.318]],["body/interceptors/ResponseInterceptorService.html",[2,0.598,3,0.493,7,0.398,9,1.438,14,1.2,19,0.598,22,1.678,24,1.936,27,1.678,29,1.2,30,0.066,31,1.01,32,0.598,33,1.01,36,1.678,42,1.488,43,0.717,45,0.493,46,0.852,59,0.042,60,0.042,73,1.678,84,1.2,110,2.319,116,1.192,141,2.832,142,1.438,146,1.438,189,1.2,190,3.612,191,1.756,192,2.456,193,2.239,194,2.456,195,3.612,196,2.832,197,3.612,198,1.756,199,1.756,200,2.239,201,2.239,202,3.132,203,2.239,204,2.239,205,1.756,206,2.456,207,3.132,208,2.239,209,2.239,210,2.239,211,2.239,212,3.132,213,2.239,214,2.239,215,2.239,216,2.239]],["title/interceptors/TokenInterceptorService.html",[74,1.318,189,1.318]],["body/interceptors/TokenInterceptorService.html",[2,0.444,3,0.366,7,0.295,9,1.066,14,0.89,19,0.444,20,1.136,22,1.349,24,0.89,25,1.302,26,1.732,27,2.058,29,1.349,30,0.067,31,1.136,32,0.975,33,1.136,34,2.861,36,1.349,38,1.531,41,1.066,42,1.461,43,0.531,44,1.302,45,0.366,46,0.632,59,0.041,60,0.034,74,1.349,84,0.89,108,1.066,116,0.958,125,3.011,138,0.749,139,1.302,143,1.066,144,1.066,145,1.066,146,1.066,151,1.302,177,1.302,189,0.89,191,1.302,192,1.974,194,1.302,196,1.974,198,1.302,199,1.302,205,1.974,217,3.99,218,3.041,219,2.518,220,3.041,221,3.041,222,3.84,223,2.518,224,1.66,225,1.66,226,1.974,227,1.66,228,1.66,229,1.66,230,1.66,231,1.66,232,1.66,233,1.66,234,1.66,235,1.66,236,2.518,237,2.518,238,1.66,239,1.66,240,1.66,241,1.66,242,1.66,243,1.66,244,1.66,245,1.66,246,1.66,247,1.66]],["title/interfaces/User.html",[178,0.936,248,1.579]],["body/interfaces/User.html",[2,0.49,3,0.404,7,0.326,19,0.49,20,1.224,30,0.064,32,1.248,33,1.224,38,2.199,45,0.404,59,0.036,60,0.036,168,2.798,170,2.798,178,1.033,184,3.685,226,2.532,248,1.742,249,1.439,250,3.568,251,3.568,252,3.568,253,3.568,254,3.568,255,3.568,256,3.568,257,3.568,258,3.568,259,3.568,260,3.229,261,3.568,262,3.568,263,3.568,264,1.835]],["title/coverage.html",[265,2.619]],["body/coverage.html",[0,1.245,1,1.05,7,0.491,8,2.164,26,1.245,30,0.064,32,0.737,59,0.048,60,0.048,116,1.05,117,2.164,136,1.772,138,1.245,178,1.373,179,2.164,248,1.772,249,2.164,265,2.164,266,2.759,267,2.759,268,2.759,269,4.688,270,2.759,271,2.759,272,2.759,273,2.759,274,2.164,275,2.737,276,2.829,277,4.262,278,2.164,279,2.829,280,2.164,281,2.164,282,2.759,283,2.759]],["title/dependencies.html",[63,1.582,284,2.061]],["body/dependencies.html",[30,0.066,43,0.929,59,0.05,60,0.05,63,1.555,80,2.923,81,2.393,87,1.864,90,2.276,93,2.276,108,1.864,142,1.864,143,1.864,144,1.864,145,1.864,285,2.903,286,4.785,287,2.903,288,2.903,289,3.728,290,2.903,291,2.903,292,2.903,293,2.903,294,2.903,295,2.903]],["title/index.html",[19,0.551,206,1.616,296,2.061]],["body/index.html",[0,1.673,3,0.518,7,0.419,13,1.845,30,0.043,31,1.061,41,1.51,59,0.043,60,0.043,77,1.51,136,1.51,297,3.241,298,3.995,299,3.708,300,3.708,301,2.353,302,2.353,303,2.353,304,3.241,305,4.438,306,4.438,307,2.353,308,2.353,309,2.353,310,2.353,311,2.353,312,2.353,313,2.353,314,2.353,315,2.353,316,3.708,317,2.353,318,4.19,319,2.353,320,2.353,321,2.353,322,2.353,323,2.353,324,2.353,325,1.845,326,3.241,327,4.19,328,3.241,329,3.241,330,2.353,331,3.995,332,2.353,333,2.353,334,2.353,335,3.708,336,2.353,337,2.353,338,2.353,339,2.353]],["title/modules.html",[61,1.069]],["body/modules.html",[30,0.057,59,0.057,60,0.057,61,1.15,62,1.926,72,1.621,81,2.307,340,3.594,341,3.594,342,4.253,343,3.594,344,3.594]],["title/overview.html",[345,2.619]],["body/overview.html",[0,1.233,1,1.755,30,0.062,45,0.602,52,1.754,59,0.048,60,0.048,61,1.147,62,2.578,63,1.464,64,1.754,65,2.143,66,2.143,67,2.143,68,2.143,69,2.143,70,2.143,71,2.143,72,1.804,73,2.143,74,2.143,75,2.811,76,2.143,77,1.754,107,1.464,116,1.04,169,2.811,178,1.04,345,2.143,346,4]],["title/routes.html",[107,1.79]],["body/routes.html",[30,0.059,59,0.059,60,0.059,107,2.044]],["title/miscellaneous/variables.html",[275,1.896,347,1.616]],["body/miscellaneous/variables.html",[19,0.756,30,0.065,32,1.087,39,2.612,40,2.612,59,0.049,60,0.049,103,2.875,274,2.219,275,1.816,276,3.582,278,2.219,279,2.219,280,3.19,281,3.19,325,2.875,347,2.219,348,3.666,349,2.829,350,2.829,351,2.829,352,2.829,353,4.303,354,2.829]]],"invertedIndex":[["",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Login.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["0.8.26",{"_index":295,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":277,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":272,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":270,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":271,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":273,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":169,"title":{},"body":{"injectables/AuthenticationService.html":{},"overview.html":{}}}],["11",{"_index":171,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["2",{"_index":346,"title":{},"body":{"overview.html":{}}}],["2.5.4",{"_index":293,"title":{},"body":{"dependencies.html":{}}}],["6.0.0",{"_index":289,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["6.0.5",{"_index":302,"title":{},"body":{"index.html":{}}}],["accept",{"_index":159,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["accept','application/json').set",{"_index":158,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["access_token",{"_index":180,"title":{},"body":{"interfaces/Login.html":{}}}],["access_token:str",{"_index":185,"title":{},"body":{"interfaces/Login.html":{}}}],["accesstoken",{"_index":218,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["accesstoken:str",{"_index":228,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["actual_compon",{"_index":58,"title":{},"body":{"components/AppComponent.html":{}}}],["angular",{"_index":299,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["angular/compil",{"_index":287,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{},"dependencies.html":{}}}],["angular/form",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/http",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":108,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/TokenInterceptorService.html":{},"dependencies.html":{}}}],["apikey",{"_index":170,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["app.compon",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["application/json",{"_index":156,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["appmodul",{"_index":62,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approute:rout",{"_index":111,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["approutingmodul",{"_index":72,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifact",{"_index":319,"title":{},"body":{"index.html":{}}}],["authenticationservic",{"_index":26,"title":{"injectables/AuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["author",{"_index":245,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["authservic",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["authservice:authenticationservic",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["automat",{"_index":311,"title":{},"body":{"index.html":{}}}],["avail",{"_index":344,"title":{},"body":{"modules.html":{}}}],["baseurl",{"_index":118,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["baseurl:str",{"_index":147,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["behaviorsubject",{"_index":135,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["behaviorsubject(fals",{"_index":137,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["bodi",{"_index":162,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["boolean",{"_index":226,"title":{},"body":{"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{}}}],["bootstrap",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["brows",{"_index":342,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":318,"title":{},"body":{"index.html":{}}}],["chang",{"_index":313,"title":{},"body":{"index.html":{}}}],["channelcod",{"_index":250,"title":{},"body":{"interfaces/User.html":{}}}],["channelcode\":\"web",{"_index":167,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["channelid",{"_index":251,"title":{},"body":{"interfaces/User.html":{}}}],["check",{"_index":338,"title":{},"body":{"index.html":{}}}],["class",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["cli",{"_index":300,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_import",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_provid",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":314,"title":{},"body":{"index.html":{}}}],["commonmodul",{"_index":105,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["compon",{"_index":0,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":57,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(\"lo\",this.authservice.gettoken",{"_index":50,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(`request",{"_index":213,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["const",{"_index":110,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{}}}],["constructor",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["constructor(authservic",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["constructor(http",{"_index":123,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["constructor(priv",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{}}}],["constructor(publ",{"_index":231,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["content",{"_index":155,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["context",{"_index":280,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":291,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":265,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["data",{"_index":234,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["date.now",{"_index":207,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["declar",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["default",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["depend",{"_index":63,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dev",{"_index":308,"title":{},"body":{"index.html":{}}}],["develop",{"_index":303,"title":{},"body":{"index.html":{}}}],["direct",{"_index":55,"title":{},"body":{"components/AppComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|modul",{"_index":317,"title":{},"body":{"index.html":{}}}],["directori",{"_index":322,"title":{},"body":{"index.html":{}}}],["dist",{"_index":321,"title":{},"body":{"index.html":{}}}],["document",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AppComponent.html":{}}}],["dynam",{"_index":288,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":332,"title":{},"body":{"index.html":{}}}],["elaps",{"_index":212,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["element",{"_index":54,"title":{},"body":{"components/AppComponent.html":{}}}],["end",{"_index":331,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":119,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["endpoint:str",{"_index":148,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["environ",{"_index":276,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["execut",{"_index":328,"title":{},"body":{"index.html":{}}}],["expires_in",{"_index":181,"title":{},"body":{"interfaces/Login.html":{}}}],["expires_in:numb",{"_index":186,"title":{},"body":{"interfaces/Login.html":{}}}],["export",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Login.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"overview.html":{}}}],["exports:[routermodul",{"_index":115,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["fals",{"_index":354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Login.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"index.html":{}}}],["firmcod",{"_index":252,"title":{},"body":{"interfaces/User.html":{}}}],["firmcode\":\"mbt",{"_index":166,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["firmid",{"_index":253,"title":{},"body":{"interfaces/User.html":{}}}],["firstnam",{"_index":254,"title":{},"body":{"interfaces/User.html":{}}}],["flag",{"_index":324,"title":{},"body":{"index.html":{}}}],["formsmodul",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["further",{"_index":334,"title":{},"body":{"index.html":{}}}],["gener",{"_index":298,"title":{},"body":{"index.html":{}}}],["get",{"_index":296,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":121,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["go",{"_index":337,"title":{},"body":{"index.html":{}}}],["grant_type\":\"refresh_token",{"_index":165,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["graph",{"_index":343,"title":{},"body":{"modules.html":{}}}],["hashlocationstrategi",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["header",{"_index":153,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["help",{"_index":335,"title":{},"body":{"index.html":{}}}],["html",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["http",{"_index":127,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["http://localhost:4200",{"_index":310,"title":{},"body":{"index.html":{}}}],["http:httpclient,priv",{"_index":150,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["http_interceptor",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":124,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["httpclient,httphead",{"_index":140,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["httpclientmodul",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule,http_interceptor",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["httphandler",{"_index":197,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["httpheader",{"_index":154,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["httpinterceptor",{"_index":205,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["httpinterceptor,httpev",{"_index":201,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["httpmodul",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["httpoption",{"_index":152,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["httprequest",{"_index":195,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["httprequest,httphandl",{"_index":200,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["httprespons",{"_index":202,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["https://backofficeapi",{"_index":130,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["id",{"_index":255,"title":{},"body":{"interfaces/User.html":{}}}],["identifi",{"_index":267,"title":{},"body":{"coverage.html":{}}}],["if(ev",{"_index":210,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["imag",{"_index":256,"title":{},"body":{"interfaces/User.html":{}}}],["implement",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["import",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Login.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Login.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{}}}],["inject",{"_index":116,"title":{"injectables/AuthenticationService.html":{}},"body":{"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{},"overview.html":{}}}],["instanceof",{"_index":211,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["intercept",{"_index":192,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["intercept(req",{"_index":194,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["intercept(req,next",{"_index":241,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor",{"_index":189,"title":{"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}},"body":{"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["interceptor.servic",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptor.service.t",{"_index":191,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["interceptor.service.ts:10",{"_index":193,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["interceptor.service.ts:13",{"_index":198,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["interceptor.service.ts:14",{"_index":227,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor.service.ts:15",{"_index":223,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor.service.ts:16",{"_index":225,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptor.service.ts:31",{"_index":224,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["interceptors/respons",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["interceptors/token",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["interfac",{"_index":178,"title":{"interfaces/Login.html":{},"interfaces/User.html":{}},"body":{"interfaces/Login.html":{},"interfaces/User.html":{},"coverage.html":{},"overview.html":{}}}],["interface/login",{"_index":139,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["isloginstoragest",{"_index":120,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isloginstoragestate$:behaviorsubject",{"_index":149,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["isreadi",{"_index":257,"title":{},"body":{"interfaces/User.html":{}}}],["js",{"_index":292,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":330,"title":{},"body":{"index.html":{}}}],["kiosk",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["kiosk.access_token",{"_index":177,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["kiosk.token_typ",{"_index":238,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["language',\"tr",{"_index":160,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["lastnam",{"_index":258,"title":{},"body":{"interfaces/User.html":{}}}],["legend",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"overview.html":{}}}],["localstorag",{"_index":125,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["localstorage.getitem('kiosk').subscribe((kiosk",{"_index":235,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["localstorage:localstorag",{"_index":151,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["localstorageset",{"_index":220,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["localstorageset:boolean",{"_index":230,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["locationstrategi",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["login",{"_index":138,"title":{"interfaces/Login.html":{}},"body":{"injectables/AuthenticationService.html":{},"interfaces/Login.html":{},"interceptors/TokenInterceptorService.html":{},"coverage.html":{}}}],["loginkiosk",{"_index":122,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["match",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Login.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{}}}],["method",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["miscellan",{"_index":347,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["modul",{"_index":61,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":336,"title":{},"body":{"index.html":{}}}],["ms",{"_index":216,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["multi",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{},"index.html":{}}}],["navig",{"_index":309,"title":{},"body":{"index.html":{}}}],["new",{"_index":136,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{},"index.html":{}}}],["next",{"_index":196,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["next.handle(req).pipe(tap(ev",{"_index":209,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["next.handle(tokenizedreq",{"_index":247,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["ng",{"_index":306,"title":{},"body":{"index.html":{}}}],["ngmodul",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":23,"title":{},"body":{"components/AppComponent.html":{}}}],["ngx",{"_index":143,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/TokenInterceptorService.html":{},"dependencies.html":{}}}],["number",{"_index":184,"title":{},"body":{"interfaces/Login.html":{},"interfaces/User.html":{}}}],["object",{"_index":353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":141,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{}}}],["oninit",{"_index":10,"title":{},"body":{"components/AppComponent.html":{}}}],["option",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{}}}],["out",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":345,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":284,"title":{"dependencies.html":{}},"body":{}}],["paramet",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["password\":\"nirvana",{"_index":164,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["passwordhash",{"_index":259,"title":{},"body":{"interfaces/User.html":{}}}],["path:'',redirectto:'index',pathmatch:'ful",{"_index":113,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["path:'index',component:appcomponent,children",{"_index":112,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["privat",{"_index":232,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["prod",{"_index":323,"title":{},"body":{"index.html":{}}}],["product",{"_index":325,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":297,"title":{},"body":{"index.html":{}}}],["promoterfirmid",{"_index":260,"title":{},"body":{"interfaces/User.html":{}}}],["promoterfirmid?:numb",{"_index":264,"title":{},"body":{"interfaces/User.html":{}}}],["properti",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Login.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{}}}],["protractor",{"_index":333,"title":{},"body":{"index.html":{}}}],["provid",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["providedin",{"_index":146,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["public",{"_index":219,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["pwa/loc",{"_index":144,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/TokenInterceptorService.html":{},"dependencies.html":{}}}],["rc.0",{"_index":290,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodul",{"_index":92,"title":{},"body":{"modules/AppModule.html":{}}}],["readm",{"_index":339,"title":{},"body":{"index.html":{}}}],["refresh_token",{"_index":182,"title":{},"body":{"interfaces/Login.html":{}}}],["refresh_token:str",{"_index":187,"title":{},"body":{"interfaces/Login.html":{}}}],["reload",{"_index":312,"title":{},"body":{"index.html":{}}}],["req",{"_index":199,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["req.clon",{"_index":243,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["req.urlwithparam",{"_index":214,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["requir",{"_index":281,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["responseinterceptorservic",{"_index":73,"title":{"interceptors/ResponseInterceptorService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ResponseInterceptorService.html":{},"overview.html":{}}}],["result",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Login.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["role",{"_index":261,"title":{},"body":{"interfaces/User.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{}}}],["rout",{"_index":107,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":222,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["router,priv",{"_index":233,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["routermodul",{"_index":106,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(approut",{"_index":114,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routing.modul",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.t",{"_index":104,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":305,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":142,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/ResponseInterceptorService.html":{},"dependencies.html":{}}}],["rxjs/oper",{"_index":204,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["scaffold",{"_index":315,"title":{},"body":{"index.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{}}}],["self",{"_index":208,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["serv",{"_index":307,"title":{},"body":{"index.html":{}}}],["server",{"_index":304,"title":{},"body":{"index.html":{}}}],["set",{"_index":157,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["sethead",{"_index":244,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthenticationService.html":{},"interfaces/Login.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"index.html":{}}}],["spec\\.t",{"_index":352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.t",{"_index":349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.t",{"_index":348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["src/app/app.compon",{"_index":109,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.t",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:11",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:18",{"_index":35,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.t",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/interceptors/respons",{"_index":190,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["src/app/interceptors/token",{"_index":217,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["src/app/interface/login.t",{"_index":179,"title":{},"body":{"interfaces/Login.html":{},"coverage.html":{}}}],["src/app/interface/user.t",{"_index":249,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/app/services/authentication.servic",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"interceptors/TokenInterceptorService.html":{}}}],["src/app/services/authentication.service.t",{"_index":117,"title":{},"body":{"injectables/AuthenticationService.html":{},"coverage.html":{}}}],["src/app/services/authentication.service.ts:11",{"_index":132,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:12",{"_index":134,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:14",{"_index":126,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:19",{"_index":129,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/app/services/authentication.service.ts:42",{"_index":128,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["src/environments/environment.prod.t",{"_index":274,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":278,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.t",{"_index":279,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":206,"title":{"index.html":{}},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["statement",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["storag",{"_index":145,"title":{},"body":{"injectables/AuthenticationService.html":{},"interceptors/TokenInterceptorService.html":{},"dependencies.html":{}}}],["store",{"_index":320,"title":{},"body":{"index.html":{}}}],["string",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Login.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{}}}],["styleurl",{"_index":15,"title":{},"body":{"components/AppComponent.html":{}}}],["subchannelid",{"_index":262,"title":{},"body":{"interfaces/User.html":{}}}],["support",{"_index":340,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":341,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":283,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":282,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":203,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AppComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["terminalid",{"_index":168,"title":{},"body":{"injectables/AuthenticationService.html":{},"interfaces/User.html":{}}}],["test",{"_index":327,"title":{},"body":{"index.html":{}}}],["test.backstage.solutions/api/v1.0",{"_index":131,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.accesstoken",{"_index":236,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["this.authservice.isloginstoragestate$.subscribe(result",{"_index":239,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["this.authservice.loginkiosk",{"_index":49,"title":{},"body":{"components/AppComponent.html":{}}}],["this.endpoint,body,httpoptions).subscribe(loginresult",{"_index":173,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.http.post(this.baseurl",{"_index":172,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.isloginstoragestate$.next(result",{"_index":175,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.localstorage.getitem('kiosk').subscribe((kiosk",{"_index":176,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.localstorage.setitem('kiosk',loginresult).subscribe(result",{"_index":174,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["this.localstorageset",{"_index":240,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["this.localstorageset==tru",{"_index":246,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["this.tokentyp",{"_index":237,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["titl",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":133,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["token_typ",{"_index":183,"title":{},"body":{"interfaces/Login.html":{}}}],["token_type:str",{"_index":188,"title":{},"body":{"interfaces/Login.html":{}}}],["tokeninterceptorservic",{"_index":74,"title":{"interceptors/TokenInterceptorService.html":{}},"body":{"modules/AppModule.html":{},"interceptors/TokenInterceptorService.html":{},"overview.html":{}}}],["tokenizedreq",{"_index":242,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["tokentyp",{"_index":221,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["tokentype:str",{"_index":229,"title":{},"body":{"interceptors/TokenInterceptorService.html":{}}}],["took",{"_index":215,"title":{},"body":{"interceptors/ResponseInterceptorService.html":{}}}],["tr",{"_index":161,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AppComponent.html":{}}}],["true",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"interfaces/Login.html":{},"interceptors/ResponseInterceptorService.html":{},"interceptors/TokenInterceptorService.html":{},"interfaces/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":326,"title":{},"body":{"index.html":{}}}],["us",{"_index":316,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["user",{"_index":248,"title":{"interfaces/User.html":{}},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["usernam",{"_index":263,"title":{},"body":{"interfaces/User.html":{}}}],["username\":\"mobilet",{"_index":163,"title":{},"body":{"injectables/AuthenticationService.html":{}}}],["valu",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["variabl",{"_index":275,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":301,"title":{},"body":{"index.html":{}}}],["via",{"_index":329,"title":{},"body":{"index.html":{}}}],["void",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthenticationService.html":{}}}],["welcom",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["zone.j",{"_index":294,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'KIOSK APP'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'KIOSK APP';\n\n  constructor(private authService:AuthenticationService) {\n\n    this.authService.loginKiosk();\n  }\n\n  ngOnInit() {\n   console.log(\"Lo\",this.authService.getToken());\n  }\n\n\n}\n\n    \n\n    \n        \n\n    \n        Welcome to {{ title }}!\n    \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Welcome to {{ title }}!    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nResponseInterceptorService\n\nResponseInterceptorService\n\nAppModule -->\n\nResponseInterceptorService->AppModule\n\n\n\n\n\nTokenInterceptorService\n\nTokenInterceptorService\n\nAppModule -->\n\nTokenInterceptorService->AppModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ResponseInterceptorService\n                            \n                            \n                                     TokenInterceptorService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AppRoutingModule\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        \nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { LocationStrategy } from '@angular/common';\nimport { HashLocationStrategy } from '@angular/common';\nimport {HttpModule} from '@angular/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { TokenInterceptorService } from './interceptors/token-interceptor.service';\nimport { ResponseInterceptorService } from './interceptors/response-interceptor.service';\nimport { AppRoutingModule } from 'src/app/app-routing.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [\n    {\n        provide: HTTP_INTERCEPTORS,\n        useClass: ResponseInterceptorService,\n        multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorService,\n      multi: true      \n    }    \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n  Modules\n  AppRoutingModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n        \n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppComponent } from 'src/app/app.component';\n\nconst appRoute:Routes = [ \n  {\n    path:'index',component:AppComponent,children:[{\n      path:'',redirectTo:'index',pathMatch:'full'\n    }]\n  }\n]\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(appRoute)\n  ],\n  declarations: [],\n  exports:[RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthenticationService.html":{"url":"injectables/AuthenticationService.html","title":"injectable - AuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/authentication.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                            \n                                endPoint\n                            \n                            \n                                isLoginStorageState$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getToken\n                            \n                            \n                                loginKiosk\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, localStorage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/authentication.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                    LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getToken\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetToken()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:42\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginKiosk\n                            \n                            \n                        \n                    \n                \n                \n                    \nloginKiosk()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:19\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        baseUrl:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"https://backofficeapi-test.backstage.solutions/api/v1.0\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            endPoint\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        endPoint:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : \"/Token\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoginStorageState$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoginStorageState$:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/services/authentication.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Login } from './../interface/login';\nimport { Injectable } from '@angular/core';\nimport { HttpClient,HttpHeaders } from '@angular/common/http';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { LocalStorage } from '@ngx-pwa/local-storage';\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  \n  baseUrl:string = \"https://backofficeapi-test.backstage.solutions/api/v1.0\";\n  endPoint:string = \"/Token\";\n\n  isLoginStorageState$:BehaviorSubject = new BehaviorSubject(false);\n\n  \n  constructor(private http:HttpClient,private localStorage:LocalStorage) { }\n\n  loginKiosk() {\n    \n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }).set( 'Accept','application/json').set( 'Accept-Language',\"tr-tr\")\n    };\n\n    const body =  {\n        \"Username\":\"mobilet\",\n        \"Password\":\"nirvana\",\n        \"grant_type\":\"refresh_token\",\n        \"FirmCode\":\"MBT\",\n        \"ChannelCode\":\"Web\",\n        \"TerminalId\": 1,\n        \"ApiKey\": 11\n    }\n    \n    this.http.post(this.baseUrl + this.endPoint,body,httpOptions).subscribe(loginResult => {\n      this.localStorage.setItem('kiosk',loginResult).subscribe(result => {\n        this.isLoginStorageState$.next(result);\n      })\n    })\n  }\n\n  getToken(){\n    this.localStorage.getItem('kiosk').subscribe((kiosk) => {\n      return kiosk.access_token;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Login.html":{"url":"interfaces/Login.html","title":"interface - Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Login\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/login.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                                \n                                        expires_in\n                                \n                                \n                                        refresh_token\n                                \n                                \n                                        token_type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                    \n                                \n                                \n                                    \n                                        expires_in:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                    \n                                \n                                \n                                    \n                                        refresh_token:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                    \n                                \n                                \n                                    \n                                        token_type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Login {\n    access_token:string;\n    expires_in:number;\n    refresh_token:string;\n    token_type:string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ResponseInterceptorService.html":{"url":"interceptors/ResponseInterceptorService.html","title":"interceptor - ResponseInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Interceptors\n  ResponseInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/response-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/response-interceptor.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(req: HttpRequest, next: HttpHandler)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/interceptors/response-interceptor.service.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                        \n                                                                    HttpRequest\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                        \n                                                                    HttpHandler\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpRequest,HttpHandler, HttpInterceptor,HttpEvent, HttpResponse   } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {tap} from 'rxjs/operators'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ResponseInterceptorService implements HttpInterceptor {\n\n  constructor() { }\n  intercept(req: HttpRequest, next: HttpHandler): Observable> {\n    const started = Date.now();\n    const self = this;\n    return next.handle(req).pipe(tap(event => {\n        if(event instanceof HttpResponse) {\n            const elapsed = Date.now() - started;\n            console.log(`Request for ${req.urlWithParams} took ${elapsed} ms.`);\n        }\n    }))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/TokenInterceptorService.html":{"url":"interceptors/TokenInterceptorService.html","title":"interceptor - TokenInterceptorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Interceptors\n  TokenInterceptorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interceptors/token-interceptor.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                    Public\n                                authService\n                            \n                            \n                                localStorageSet\n                            \n                            \n                                tokenType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthenticationService, router: Router, localStorage: LocalStorage)\n                    \n                \n                        \n                            \n                                Defined in src/app/interceptors/token-interceptor.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                    AuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorage\n                                                  \n                                                        \n                                                                    LocalStorage\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            intercept\n                            \n                            \n                        \n                    \n                \n                \n                    \nintercept(req: , next: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/app/interceptors/token-interceptor.service.ts:31\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        req\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        next\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            accessToken\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accessToken:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/interceptors/token-interceptor.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            authService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        authService:     AuthenticationService\n\n                    \n                \n                    \n                        \n                            Type :     AuthenticationService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/interceptors/token-interceptor.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            localStorageSet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        localStorageSet:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/interceptors/token-interceptor.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tokenType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tokenType:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/interceptors/token-interceptor.service.ts:14\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Login } from './../interface/login';\nimport { HttpInterceptor } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthenticationService } from 'src/app/services/authentication.service';\nimport { Router } from '@angular/router';\nimport { LocalStorage } from '@ngx-pwa/local-storage';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenInterceptorService implements HttpInterceptor {\n  accessToken:string;\n  tokenType:string;\n  localStorageSet:boolean;\n  constructor(public authService: AuthenticationService, private router: Router,private localStorage:LocalStorage ) {\n    /**\n     * Get Kiosk Localstorage data \n     */\n    localStorage.getItem('kiosk').subscribe((kiosk) => {\n      this.accessToken = kiosk.access_token;\n      this.tokenType = kiosk.token_type;\n    });\n\n\n    this.authService.isLoginStorageState$.subscribe(result => {\n      this.localStorageSet = result;\n    })\n   }\n\n  intercept(req,next) {\n    \n    let tokenizedReq = req.clone( {\n      setHeaders: {\n        Authorization: this.localStorageSet==true ? `${this.tokenType} ${this.accessToken}` : \"\"\n      }\n    })\n    return next.handle(tokenizedReq);\n  }\n}\n \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interface/user.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ApiKey\n                                \n                                \n                                        ChannelCode\n                                \n                                \n                                        ChannelId\n                                \n                                \n                                        FirmCode\n                                \n                                \n                                        FirmId\n                                \n                                \n                                        FirstName\n                                \n                                \n                                        Id\n                                \n                                \n                                        Images\n                                \n                                \n                                        isReady\n                                \n                                \n                                        LastName\n                                \n                                \n                                        PasswordHash\n                                \n                                \n                                            Optional\n                                        PromoterFirmId\n                                \n                                \n                                        Roles\n                                \n                                \n                                        SubChannelId\n                                \n                                \n                                        TerminalId\n                                \n                                \n                                        UserName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ApiKey\n                                    \n                                \n                                \n                                    \n                                        ApiKey:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ChannelCode\n                                    \n                                \n                                \n                                    \n                                        ChannelCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ChannelId\n                                    \n                                \n                                \n                                    \n                                        ChannelId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FirmCode\n                                    \n                                \n                                \n                                    \n                                        FirmCode:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FirmId\n                                    \n                                \n                                \n                                    \n                                        FirmId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        FirstName\n                                    \n                                \n                                \n                                    \n                                        FirstName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Id\n                                    \n                                \n                                \n                                    \n                                        Id:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Images\n                                    \n                                \n                                \n                                    \n                                        Images:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isReady\n                                    \n                                \n                                \n                                    \n                                        isReady:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        LastName\n                                    \n                                \n                                \n                                    \n                                        LastName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PasswordHash\n                                    \n                                \n                                \n                                    \n                                        PasswordHash:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        PromoterFirmId\n                                    \n                                \n                                \n                                    \n                                        PromoterFirmId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        Roles\n                                    \n                                \n                                \n                                    \n                                        Roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        SubChannelId\n                                    \n                                \n                                \n                                    \n                                        SubChannelId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        TerminalId\n                                    \n                                \n                                \n                                    \n                                        TerminalId:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        UserName\n                                    \n                                \n                                \n                                    \n                                        UserName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    Id: number;\n    FirmCode: string;\n    FirmId: number;\n    ChannelCode: string;\n    ChannelId: number;\n    SubChannelId: number;\n    TerminalId: number;\n    PasswordHash: string;\n    UserName: string;\n    FirstName: string;\n    LastName: string;\n    Images: string;\n    Roles: string[];\n    ApiKey: string;\n    isReady: boolean;\n    PromoterFirmId?:number;    \n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    src/app/interface/login.ts\n            \n            \n                interface\n            \n            \n                Login\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                    src/app/interface/user.ts\n            \n            \n                interface\n            \n            \n                User\n            \n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                    src/app/services/authentication.service.ts\n            \n            \n                injectable\n            \n            \n                AuthenticationService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                context\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/test.ts\n            \n            \n                variable\n            \n            \n                require\n            \n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            @ngx-pwa/local-storage : ^6.0.0-rc.0\n        \n            core-js : ^2.5.4\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nKiosk\nThis project was generated with Angular CLI version 6.0.5.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nResponseInterceptorService\n\nResponseInterceptorService\n\nAppModule -->\n\nResponseInterceptorService->AppModule\n\n\n\n\n\nTokenInterceptorService\n\nTokenInterceptorService\n\nAppModule -->\n\nTokenInterceptorService->AppModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            2 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        1 component\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 injectable\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 interfaces\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            2 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        context:     \n\n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        require:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
